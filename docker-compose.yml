version: '3.8'

services:

    # The database of the backend application.
    db:
        image: postgres:14-alpine
        container_name: manazeak_postgresql
        environment:
            POSTGRES_DB: music
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ${DB_DATA}:/var/lib/postgresql/data
        # Ports used to access the database from the outside (can be removed for prod scenarios).
        ports:
            - "5432:5432"

    # The backend application contains all the hidden logic for the front.
    back:
        build:
            context: .
            target: ${BACK_TARGET}
            dockerfile: back/Dockerfile
        container_name: manazeak_app
        # Debug ports.
        ports:
            - "5005:5005"
            - "8080:8080"
            - "35729:35729"
        volumes:
            - ${RESOURCES_PATH}:/resources
            - ${LIBRARY_PATH}:/library
            - ${LOGS_PATH}:/log
            - ${ASSETS_PATH}:/assets
            # Adding the certificate generated by ES, adding it in read-only mode.
            - ${ES_CERT_COPY_PATH}/ca.crt:/cert/es.crt:ro
        links:
            - db
        depends_on:
            mzk_es01:
                condition: service_healthy
            db:
                condition: service_started

    # This container allows serving the static files and the JS.
    # Also is the reverse proxy for the backend application.
    nginx:
        image: nginx:latest
        container_name: manazeak_nginx
        ports:
            - "80:8080"
        volumes:
            - ${LIBRARY_PATH}:/library
            - ${RESOURCES_PATH}:/resources
            - ./docker/nginx/config:/etc/nginx/conf.d
            - ./static:/static
        depends_on:
            - back
        links:
            - back
            - moodbar

    # This container is used to generate the file containing the encoded moodbars.
    moodbar:
        image: manazeak/moodbar_docker
        container_name: manazeak_moodbar
        volumes:
            - ${LIBRARY_PATH}:/library
            # This folder contains the moodbar generated by the container.
            - ${RESOURCES_PATH}:/resources
        links:
            - back

    mzk_es01:
        depends_on:
            es_setup:
                condition: service_healthy
        image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
        volumes:
            - ${ES_CERT_PATH}:/usr/share/elasticsearch/config/certs
            - ${ES_DATA}:/usr/share/elasticsearch/data
        ports:
            - "127.0.0.1:9200:9200"
        environment:
            - node.name=mzk_es01
            - cluster.name=ManaZeak
            - discovery.type=single-node
            - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
            - bootstrap.memory_lock=true
            - xpack.security.enabled=true
            - xpack.security.http.ssl.enabled=true
            - xpack.security.http.ssl.key=certs/mzk_es01/mzk_es01.key
            - xpack.security.http.ssl.certificate=certs/mzk_es01/mzk_es01.crt
            - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
            - xpack.security.transport.ssl.enabled=true
            - xpack.security.transport.ssl.key=certs/mzk_es01/mzk_es01.key
            - xpack.security.transport.ssl.certificate=certs/mzk_es01/mzk_es01.crt
            - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
            - xpack.security.transport.ssl.verification_mode=certificate
            - xpack.license.self_generated.type=basic
        # Configuring the max RAM of the ES, if not set, the container dies.
        mem_limit: ${ES_MEM_LIMIT}
        ulimits:
            memlock:
                soft: -1
                hard: -1
        healthcheck:
            test:
              [
                  "CMD-SHELL",
                  "curl -s --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
              ]
            interval: 10s
            timeout: 10s
            retries: 120

    es_setup:
        image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
        volumes:
            - ${ES_CERT_PATH}:/usr/share/elasticsearch/config/certs
            - ${ES_CERT_COPY_PATH}:/certs
        user: "0"
        command: >
            bash -c '
              if [ x${ELASTIC_PASSWORD} == x ]; then
                echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
                exit 1;
              fi;
              if [ ! -f config/certs/ca.zip ]; then
                echo "Creating CA";
                bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
                unzip config/certs/ca.zip -d config/certs;
              fi;
              if [ ! -f config/certs/certs.zip ]; then
                echo "Creating certs";
                echo -ne \
                "instances:\n"\
                "  - name: mzk_es01\n"\
                "    dns:\n"\
                "      - mzk_es01\n"\
                "      - localhost\n"\
                "    ip:\n"\
                "      - 127.0.0.1\n"\
                > config/certs/instances.yml;
                bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
                unzip config/certs/certs.zip -d config/certs;
              fi;
              echo "Setting file permissions"
              chown -R root:root config/certs;
              find . -type d -exec chmod 750 \{\} \;;
              find . -type f -exec chmod 640 \{\} \;;
              echo "Copying the certificate"
              cp /usr/share/elasticsearch/config/certs/ca/ca.crt /certs
              echo "Waiting for Elasticsearch availability";
              until curl -s --cacert config/certs/ca/ca.crt https://mzk_es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
              echo "All done!";
            '
        healthcheck:
            test: [ "CMD-SHELL", "[ -f /usr/share/elasticsearch/config/certs/ca/ca.crt ]" ]
            interval: 1s
            timeout: 5s
            retries: 120

    syncthing:
        image: syncthing/syncthing:latest
        container_name: manazeak_syncthing
        # For local discovery use this :
        # network_mode: "host"
        volumes:
            - ${LIBRARY_PATH}:/ManaZeak
            - ${ASSETS_PATH}:/Pictures # Path leading to the ManaZeak Pictures (artists face, genre and producer logo)
        ports:
            - "127.0.0.1:8384:8384"
            - "22000:22000"
            - "21027:21027/udp"
