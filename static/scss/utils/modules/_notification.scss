/* Usefull classes and styles taken from MessCss */
$font-size:        14px;
$line-spacing:     $font-size * (140 / 100);
$border-radius:    2px;
$border-thickness: 1px;

$color-dark-text:       rgb(20, 20, 20);
$color-dark-border:   	rgb(20, 20, 20);
$color-info:    		rgb(3, 169, 244);
$color-info-light:      rgba(3, 169, 244, 0.25);
$color-info-lighter:    rgb(205, 238, 253);
$color-success: 		rgb(76, 175, 80);
$color-success-light:   rgba(76, 175, 80, 0.25);
$color-success-lighter: rgb(219, 239, 220);
$color-warning: 		rgb(255, 152, 0);
$color-warning-light: 	rgba(255, 152, 0, 0.25);
$color-warning-lighter: rgb(255, 234, 204);
$color-error:   	  	rgb(244, 67, 54);
$color-error-light:   	rgba(244, 67, 54, 0.25);
$color-error-lighter: 	rgb(253, 217, 215);

/* Notification specific variables */ 
$notification-width: 	    325px;
$notification-min-height:   50px;
$notification-icon: 	    25px;
$notification-counter-size: 18px;
$notification-padding: 	    12px;
$notification-margin: 	    10px;
$notification-border-thick: 3px;
$notification-border-std:   1px;

div, span, h1, h2, h3, h4, h5, h6, p, blockquote, a, cite, code, pre, em, q, small, strong, sub, sup, b, u, i {
	border: 0;
	font: inherit;
	font-size: 100%;
	margin: 0;
	padding: 0;
	vertical-align: baseline;
}

body 				 { line-height: 1; 		}
*, *:before, *:after { box-sizing: border-box; }

@mixin userSelect($value) {
    -webkit-user-select: $value;
    -moz-user-select:    $value;
    -ms-user-select:     $value;
    -o-user-select:      $value;
    user-select:         $value;
}

@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition:    $transition;
    -o-transition:      $transition;
    transition:         $transition;
}

@mixin shadow($shadow, $r, $g, $b, $a) {
    -webkit-box-shadow: $shadow rgba($r, $g, $b, $a);
    -moz-box-shadow:    $shadow rgba($r, $g, $b, $a);
    -o-box-shadow:      $shadow rgba($r, $g, $b, $a);
    box-shadow:         $shadow rgba($r, $g, $b, $a);
}

html {
    font-family:      Helvetica, sans-serif;
}

body {
    font-size:   $font-size;
    line-height: $line-spacing;
}

h1, h2, h3, h4, h5, h6 {
    color:       $color-dark-text;
    font-weight: bold;
}

button {
    background-color: transparent;
    border:           $border-thickness solid $color-dark-border;
    border-radius:    $border-radius;
    cursor:           pointer;
    padding:          ($notification-padding / 2) $notification-padding;
}


/* Notification style code begin here */
.notification-container {
	height:   auto;
	position: fixed;
	width:    $notification-width;

	&.top-left {
		left: 0;
		top:  0;
	}

	&.top-right {
		right: 0;
		top:   0;
	}

	&.bottom-left {
		bottom: 0;
		left:   0;
	}

	&.bottom-right {
		bottom: 0;
		right:  0;
	}
}


.notification {
	align-items:   center;
	border-radius: $border-radius;
	cursor: 	   pointer;
	display: 	   flex;
	font-size: 	   0.9em;
	height: 	   auto;
	margin: 	   $notification-margin;
	padding: 	   $notification-padding;
	position: 	   relative;
	width: 		   auto;
	z-index: 	   9999;

	@include shadow(0 0 $notification-margin, 0, 0, 0, 0.2);
	@include userSelect(none);

	&:nth-child(n + 2) {
		margin-top: $notification-padding;
	}

	.vector-container {
		height: 	$notification-icon;
		margin: 	0;
		width: 		$notification-icon;

		svg {
			height:  $notification-icon;
			width:   $notification-icon;
		}
	}

	.text-container {
		padding:    0 $notification-padding;
		text-align: left;

		h6,
		p {
			margin-bottom: ($notification-padding / 2);
			max-width: 	   $notification-width - (2 * $notification-margin) - (4 * $notification-padding) - $notification-icon - (2 * $border-thickness);
			word-wrap: 	   break-word;
		}

		p {
			font-size: 	   0.9em;
			line-height:   1.4em;
			margin:        0;
			margin-bottom: ($notification-padding / 2);

			&.iconless-width {
				max-width: $notification-width - (2 * $notification-margin) - (4 * $notification-padding) - (2 * $border-thickness);
			}
		}

		button {
			font-size:     0.9em;
			margin-bottom: 0;
			padding: 	   ($notification-padding / 6) ($notification-padding / 2);
		}
	}

	&.left-border,
	&.right-border {
		h6,
		p {
			max-width: $notification-width - (2 * $notification-margin) - (4 * $notification-padding) - $notification-icon - ($border-thickness + $notification-border-thick);
			&.iconless-width {
				max-width: $notification-width - (2 * $notification-margin) - (4 * $notification-padding) - ($border-thickness + $notification-border-thick);
			}
		}
	}

	.counter {
		align-items:     center;
		border-radius:   50%;
		color: 		     $color-dark-text;
		display: 	     flex;
		font-size: 	     0.85em;
		height: 	     $notification-counter-size;
		justify-content: center;
		left: 			 -7px;
		line-height: 	 100%;
		position: 		 absolute;
		top: 			 -5px;
		width: 			 $notification-counter-size;
	}

	.close {
		cursor:   pointer;
		position: absolute;
		right:    $notification-margin;
		top: 	  ($notification-margin / 2);
	}

	&.info {
		background-color: $color-info-lighter;
		border: 		  solid $notification-border-std $color-info-light;

		& > .close {
			color: $color-info;
		}

		& > .counter {
			background: $color-info-lighter;
			border: 	solid $notification-border-std $color-info;
		}

		&.top-border    { border-top:    solid $notification-border-thick $color-info; }
		&.bottom-border { border-bottom: solid $notification-border-thick $color-info; }
		&.left-border   { border-left:   solid $notification-border-thick $color-info; }
		&.right-border  { border-right:  solid $notification-border-thick $color-info; }
	}

	&.success {
		background-color: $color-success-lighter;
		border: 		  solid $notification-border-std $color-success-light;

		& > .close {
			color: $color-success;
		}

		& > .counter {
			background: $color-success-lighter;
			border: 	solid $notification-border-std $color-success;
		}

		&.top-border    { border-top:    solid $notification-border-thick $color-success; }
		&.bottom-border { border-bottom: solid $notification-border-thick $color-success; }
		&.left-border   { border-left:   solid $notification-border-thick $color-success; }
		&.right-border  { border-right:  solid $notification-border-thick $color-success; }
	}

	&.warning {
		background-color: $color-warning-lighter;
		border: solid $notification-border-std $color-warning-light;

		& > .close {
			color: $color-warning;
		}

		& > .counter {
			background: $color-warning-lighter;
			border:     solid $notification-border-std $color-warning;
		}

		&.top-border    { border-top: 	 solid $notification-border-thick $color-warning; }
		&.bottom-border { border-bottom: solid $notification-border-thick $color-warning; }
		&.left-border   { border-left: 	 solid $notification-border-thick $color-warning; }
		&.right-border  { border-right:  solid $notification-border-thick $color-warning; }
	}

	&.error {
		background-color: $color-error-lighter;
		border: 		  solid $notification-border-std $color-error-light;

		& > .close {
			color: $color-error;
		}

		& > .counter {
			background: $color-error-lighter;
			border: 	solid $notification-border-std $color-error;
		}

		&.top-border    { border-top:    solid $notification-border-thick $color-error; }
		&.bottom-border { border-bottom: solid $notification-border-thick $color-error; }
		&.left-border   { border-left: 	 solid $notification-border-thick $color-error; }
		&.right-border  { border-right:  solid $notification-border-thick $color-error; }
	}
}
